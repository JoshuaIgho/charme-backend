// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String         @id @default(cuid())
  clerkId       String         @unique @default("")
  name          String         @default("")
  email         String         @unique @default("")
  password      String?
  isAdmin       Boolean        @default(false)
  orders        Order[]        @relation("Order_user")
  wishlistItems WishlistItem[] @relation("WishlistItem_user")
  addresses     Address[]      @relation("Address_user")
  createdAt     DateTime?      @default(now())
}

model Product {
  id              String         @id @default(cuid())
  name            String         @default("")
  description     String         @default("")
  price           Int
  stock           Int?           @default(0)
  image_id        String?
  image_filesize  Int?
  image_width     Int?
  image_height    Int?
  image_extension String?
  category        Category?      @relation("Product_category", fields: [categoryId], references: [id])
  categoryId      String?        @map("category")
  orderItems      OrderItem[]    @relation("OrderItem_product")
  wishlistItems   WishlistItem[] @relation("WishlistItem_product")

  @@index([categoryId])
}

model Category {
  id       String    @id @default(cuid())
  name     String    @default("")
  products Product[] @relation("Product_category")
}

model Order {
  id                String           @id @default(cuid())
  orderNumber       String           @unique @default("")
  totalAmount       Int
  status            String           @default("pending")
  paymentMethod     String           @default("stripe")
  paymentStatus     String           @default("pending")
  paymentReference  String           @default("")
  user              User?            @relation("Order_user", fields: [userId], references: [id])
  userId            String?          @map("user")
  items             OrderItem[]      @relation("OrderItem_order")
  shippingAddress   ShippingAddress? @relation("Order_shippingAddress", fields: [shippingAddressId], references: [id])
  shippingAddressId String?          @unique @map("shippingAddress")
  createdAt         DateTime?        @default(now())

  @@index([userId])
}

model OrderItem {
  id        String   @id @default(cuid())
  order     Order?   @relation("OrderItem_order", fields: [orderId], references: [id])
  orderId   String?  @map("order")
  product   Product? @relation("OrderItem_product", fields: [productId], references: [id])
  productId String?  @map("product")
  quantity  Int
  price     Int

  @@index([orderId])
  @@index([productId])
}

model ShippingAddress {
  id         String @id @default(cuid())
  order      Order? @relation("Order_shippingAddress")
  fullName   String @default("")
  phone      String @default("")
  address    String @default("")
  city       String @default("")
  state      String @default("")
  postalCode String @default("")
  country    String @default("")
}

model WishlistItem {
  id        String    @id @default(cuid())
  user      User?     @relation("WishlistItem_user", fields: [userId], references: [id])
  userId    String?   @map("user")
  product   Product?  @relation("WishlistItem_product", fields: [productId], references: [id])
  productId String?   @map("product")
  addedAt   DateTime? @default(now())

  @@index([userId])
  @@index([productId])
}

model Address {
  id         String    @id @default(cuid())
  user       User?     @relation("Address_user", fields: [userId], references: [id])
  userId     String?   @map("user")
  fullName   String    @default("")
  phone      String    @default("")
  address    String    @default("")
  city       String    @default("")
  state      String    @default("")
  postalCode String    @default("")
  country    String    @default("Nigeria")
  isDefault  Boolean   @default(false)
  createdAt  DateTime? @default(now())

  @@index([userId])
}
